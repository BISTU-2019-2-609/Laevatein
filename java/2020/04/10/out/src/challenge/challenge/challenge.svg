<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="495px" preserveAspectRatio="none" style="width:288px;height:495px;" version="1.1" viewBox="0 0 288 495" width="288px" zoomAndPan="magnify"><defs><filter height="300%" id="fqpd8i9jtynb6" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class Point--><rect fill="#FEFECE" filter="url(#fqpd8i9jtynb6)" height="176.0469" id="Point" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="6" y="8"/><ellipse cx="121.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M124.2188,29.6406 Q123.6406,29.9375 123,30.0781 Q122.3594,30.2344 121.6563,30.2344 Q119.1563,30.2344 117.8281,28.5938 Q116.5156,26.9375 116.5156,23.8125 Q116.5156,20.6875 117.8281,19.0313 Q119.1563,17.375 121.6563,17.375 Q122.3594,17.375 123,17.5313 Q123.6563,17.6875 124.2188,17.9844 L124.2188,20.7031 Q123.5938,20.125 123,19.8594 Q122.4063,19.5781 121.7813,19.5781 Q120.4375,19.5781 119.75,20.6563 Q119.0625,21.7188 119.0625,23.8125 Q119.0625,25.9063 119.75,26.9844 Q120.4375,28.0469 121.7813,28.0469 Q122.4063,28.0469 123,27.7813 Q123.5938,27.5 124.2188,26.9219 L124.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="32" x="141.75" y="28.1543">Point</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="276" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="48"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="26" y="54.2104">x: double</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="60.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="26" y="67.0151">y: double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="276" y1="73.6094" y2="73.6094"/><ellipse cx="17" cy="84.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="26" y="87.8198">Point()</text><ellipse cx="17" cy="97.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="26" y="100.6245">Point(x: double, y: double)</text><ellipse cx="17" cy="110.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="26" y="113.4292">setX(x: double): void</text><ellipse cx="17" cy="123.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="26" y="126.2339">setY(y: double): void</text><ellipse cx="17" cy="135.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="26" y="139.0386">getX(): double</text><ellipse cx="17" cy="148.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="26" y="151.8433">getY(): double</text><ellipse cx="17" cy="161.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="26" y="164.6479">static distance(p1: Ponit, p2: Point): double</text><ellipse cx="17" cy="174.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="26" y="177.4526">distance(Point p): double</text><!--class Circle--><rect fill="#FEFECE" filter="url(#fqpd8i9jtynb6)" height="240.0703" id="Circle" style="stroke: #A80036; stroke-width: 1.5;" width="268" x="7.5" y="244"/><ellipse cx="120.25" cy="260" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M123.2188,265.6406 Q122.6406,265.9375 122,266.0781 Q121.3594,266.2344 120.6563,266.2344 Q118.1563,266.2344 116.8281,264.5938 Q115.5156,262.9375 115.5156,259.8125 Q115.5156,256.6875 116.8281,255.0313 Q118.1563,253.375 120.6563,253.375 Q121.3594,253.375 122,253.5313 Q122.6563,253.6875 123.2188,253.9844 L123.2188,256.7031 Q122.5938,256.125 122,255.8594 Q121.4063,255.5781 120.7813,255.5781 Q119.4375,255.5781 118.75,256.6563 Q118.0625,257.7188 118.0625,259.8125 Q118.0625,261.9063 118.75,262.9844 Q119.4375,264.0469 120.7813,264.0469 Q121.4063,264.0469 122,263.7813 Q122.5938,263.5 123.2188,262.9219 L123.2188,265.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="140.75" y="264.1543">Circle</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8.5" x2="274.5" y1="276" y2="276"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15.5" y="284"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="27.5" y="290.2104">p: Point</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15.5" y="296.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="27.5" y="303.0151">radius: double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8.5" x2="274.5" y1="309.6094" y2="309.6094"/><ellipse cx="18.5" cy="320.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="27.5" y="323.8198">Circle()</text><ellipse cx="18.5" cy="333.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="27.5" y="336.6245">Circle(p: Point, radius: double)</text><ellipse cx="18.5" cy="346.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="27.5" y="349.4292">Circle(x: double, y: double, radius: double)</text><ellipse cx="18.5" cy="359.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="27.5" y="362.2339">setP(p: Point): void</text><ellipse cx="18.5" cy="371.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="27.5" y="375.0386">setRadius(radius: double): void</text><ellipse cx="18.5" cy="384.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="27.5" y="387.8433">getP(): Point</text><ellipse cx="18.5" cy="397.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="27.5" y="400.6479">getRadius(): double</text><ellipse cx="18.5" cy="410.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="27.5" y="413.4526">getArea(): double</text><ellipse cx="18.5" cy="423.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="27.5" y="426.2573">getPerimeter(): double</text><ellipse cx="18.5" cy="435.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="27.5" y="439.062">contains(x: double, y: double): boolean</text><ellipse cx="18.5" cy="448.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="27.5" y="451.8667">contains(p: Point): boolean</text><ellipse cx="18.5" cy="461.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="27.5" y="464.6714">contains(circle: Circle): boolean</text><ellipse cx="18.5" cy="474.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="27.5" y="477.4761">overlaps(circle: Circle): boolean</text><!--reverse link Point to Circle--><path d="M141.5,197.2821 C141.5,212.4534 141.5,228.2206 141.5,243.7394 " fill="none" id="Point&lt;-Circle" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="141.5,184.1244,137.5,190.1244,141.5,196.1244,145.5,190.1244,141.5,184.1244" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml challenge
class Point {
    -x: double
    -y: double
    +Point()
    +Point(x: double, y: double)
    +setX(x: double): void
    +setY(y: double): void
    +getX(): double
    +getY(): double
    + static distance(p1: Ponit, p2: Point): double
    + distance(Point p): double
}

class Circle {
    -p: Point
    -radius: double
    +Circle()
    +Circle(p: Point, radius: double)
    +Circle(x: double, y: double, radius: double)
    +setP(p: Point): void
    +setRadius(radius: double): void
    +getP(): Point
    +getRadius(): double
    +getArea(): double
    +getPerimeter(): double
    +contains(x: double, y: double): boolean
    +contains(p: Point): boolean
    +contains(circle: Circle): boolean
    +overlaps(circle: Circle): boolean
}

Point o- - Circle
@enduml

PlantUML version 1.2019.09(Tue Aug 27 00:19:51 CST 2019)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: Eclipse OpenJ9 VM
Java Version: 11.0.6+10
Operating System: Linux
OS Version: 4.19.84-microsoft-standard
Default Encoding: UTF-8
Language: c.u
Country: US
--></g></svg>